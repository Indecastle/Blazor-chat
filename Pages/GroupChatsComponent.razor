@page "/groupchats"
@inject ApplicationDbContext _db;
@inject AuthenticationStateProvider AuthenticationStateProvider;
@inject UserManager<User> _userManager;
@inject NavigationManager NavigationManager
<h3>GroupChatsComponent</h3>

<ul class="list-group" style="width: 500px;">
    @foreach (var chat in groupChats)
    {
        <li class="list-group-item d-flex justify-content-between align-items-center">
            @{ var groupusers = chat.ChatUsers.Select(cu => cu.User).ToList(); }
            @chat.Name
            <button type="button" class="btn btn-outline-dark" @onclick="@(e => OpenChat(chat))">Открыть беседу</button>
            <span class="badge badge-primary badge-pill">@chat.ChatUsers.Count</span>


        </li>
    }
</ul>

@code {




List<GroupChat> groupChats = new List<GroupChat>();

protected override async Task OnInitializedAsync()
{
    var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
    var claimUser = authState.User;
    var user = _db.Users.Include(u => u.ChatUsers).ThenInclude(cu => cu.GroupChat).ToList().FirstOrDefault(u => u.UserName == claimUser.Identity.Name);
    groupChats = user.ChatUsers.Select(cu => cu.GroupChat).ToList();
}

public void OpenChat(GroupChat chat)
{
    NavigationManager.NavigateTo($"chat/{chat.Id}/", true);

}
}
